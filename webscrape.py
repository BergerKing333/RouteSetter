import requests
import json

import numpy as np
import pandas as pd

class webscraper:
    def __init__(self, angle = 30, numResults = 1000, showCampusOnly = False) -> None:
        self.angle = angle
        self.numResults = numResults
        self.showCampusOnly = showCampusOnly
        self.HOLD_ID = [1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599]
        self.HOLDCOORDINATES = [[1020, 1225], [960, 1225], [900, 1225], [840, 1225], [780, 1225], [720, 1225], [660, 1225], [600, 1225], [540, 1225], [480, 1225], [420, 1225], [360, 1225], [300, 1225], [240, 1225], [180, 1225], [120, 1225], [60, 1225], [60, 1165], [120, 1165], [180, 1165], [240, 1165], [300, 1165], [360, 1165], [420, 1165], [480, 1165], [540, 1165], [600, 1165], [660, 1165], [720, 1165], [780, 1165], [840, 1165], [900, 1165], [960, 1165], [1020, 1165], [60, 1105], [120, 1105], [180, 1105], [240, 1105], [300, 1105], [360, 1105], [420, 1105], [480, 1105], [540, 1105], [600, 1105], [660, 1105], [720, 1105], [780, 1105], [840, 1105], [900, 1105], [960, 1105], [1020, 1105], [60, 1045], [120, 1045], [180, 1045], [240, 1045], [300, 1045], [360, 1045], [420, 1045], [480, 1045], [540, 1045], [600, 1045], [660, 1045], [720, 1045], [780, 1045], [840, 1045], [900, 1045], [960, 1045], [1020, 1045], [60, 985], [120, 985], [180, 985], [240, 985], [300, 985], [360, 985], [420, 985], [480, 985], [540, 985], [600, 985], [660, 985], [720, 985], [780, 985], [840, 985], [900, 985], [960, 985], [1020, 985], [60, 925], [120, 925], [180, 925], [240, 925], [300, 925], [360, 925], [420, 925], [480, 925], [540, 925], [600, 925], [660, 925], [720, 925], [780, 925], [840, 925], [900, 925], [960, 925], [1020, 925], [60, 865], [120, 865], [180, 865], [240, 865], [300, 865], [360, 865], [420, 865], [480, 865], [540, 865], [600, 865], [660, 865], [720, 865], [780, 865], [840, 865], [900, 865], [960, 865], [1020, 865], [60, 805], [120, 805], [180, 805], [240, 805], [300, 805], [360, 805], [420, 805], [480, 805], [540, 805], [600, 805], [660, 805], [720, 805], [780, 805], [840, 805], [900, 805], [960, 805], [1020, 805], [60, 745], [120, 745], [180, 745], [240, 745], [300, 745], [360, 745], [420, 745], [480, 745], [540, 745], [600, 745], [660, 745], [720, 745], [780, 745], [840, 745], [900, 745], [960, 745], [1020, 745], [60, 685], [120, 685], [180, 685], [240, 685], [300, 685], [360, 685], [420, 685], [480, 685], [540, 685], [600, 685], [660, 685], [720, 685], [780, 685], [840, 685], [900, 685], [960, 685], [1020, 685], [60, 625], [120, 625], [180, 625], [240, 625], [300, 625], [360, 625], [420, 625], [480, 625], [540, 625], [600, 625], [660, 625], [720, 625], [780, 625], [840, 625], [900, 625], [960, 625], [1020, 625], [60, 565], [120, 565], [180, 565], [240, 565], [300, 565], [360, 565], [420, 565], [480, 565], [540, 565], [600, 565], [660, 565], [720, 565], [780, 565], [840, 565], [900, 565], [960, 565], [1020, 565], [60, 505], [120, 505], [180, 505], [240, 505], [300, 505], [360, 505], [420, 505], [480, 505], [540, 505], [600, 505], [660, 505], [720, 505], [780, 505], [840, 505], [900, 505], [960, 505], [1020, 505], [60, 445], [120, 445], [180, 445], [240, 445], [300, 445], [360, 445], [420, 445], [480, 445], [540, 445], [600, 445], [660, 445], [720, 445], [780, 445], [840, 445], [900, 445], [960, 445], [1020, 445], [60, 385], [120, 385], [180, 385], [240, 385], [300, 385], [360, 385], [420, 385], [480, 385], [540, 385], [600, 385], [660, 385], [720, 385], [780, 385], [840, 385], [900, 385], [960, 385], [1020, 385], [60, 325], [120, 325], [180, 325], [240, 325], [300, 325], [360, 325], [420, 325], [480, 325], [540, 325], [600, 325], [660, 325], [720, 325], [780, 325], [840, 325], [900, 325], [960, 325], [1020, 325], [60, 265], [120, 265], [180, 265], [240, 265], [300, 265], [360, 265], [420, 265], [480, 265], [540, 265], [600, 265], [660, 265], [720, 265], [780, 265], [840, 265], [900, 265], [960, 265], [1020, 265], [60, 205], [120, 205], [180, 205], [240, 205], [300, 205], [360, 205], [420, 205], [480, 205], [540, 205], [600, 205], [660, 205], [720, 205], [780, 205], [840, 205], [900, 205], [960, 205], [1020, 205], [60, 145], [120, 145], [180, 145], [240, 145], [300, 145], [360, 145], [420, 145], [480, 145], [540, 145], [600, 145], [660, 145], [720, 145], [780, 145], [840, 145], [900, 145], [960, 145], [1020, 145], [1050, 1255], [990, 1255], [930, 1255], [870, 1255], [810, 1255], [750, 1255], [690, 1255], [630, 1255], [570, 1255], [510, 1255], [450, 1255], [390, 1255], [330, 1255], [270, 1255], [210, 1255], [150, 1255], [90, 1255], [30, 1255], [30, 1135], [150, 1135], [270, 1135], [390, 1135], [510, 1135], [630, 1135], [750, 1135], [870, 1135], [990, 1135], [90, 1075], [210, 1075], [330, 1075], [450, 1075], [570, 1075], [690, 1075], [810, 1075], [930, 1075], [1050, 1075], [30, 1015], [150, 1015], [270, 1015], [390, 1015], [510, 1015], [630, 1015], [750, 1015], [870, 1015], [990, 1015], [90, 955], [210, 955], [330, 955], [450, 955], [570, 955], [690, 955], [810, 955], [930, 955], [1050, 955], [30, 895], [150, 895], [270, 895], [390, 895], [510, 895], [630, 895], [750, 895], [870, 895], [990, 895], [90, 835], [210, 835], [330, 835], [450, 835], [570, 835], [690, 835], [810, 835], [930, 835], [1050, 835], [30, 775], [150, 775], [270, 775], [390, 775], [510, 775], [630, 775], [750, 775], [870, 775], [990, 775], [90, 715], [210, 715], [330, 715], [450, 715], [570, 715], [690, 715], [810, 715], [930, 715], [1050, 715], [30, 655], [150, 655], [270, 655], [390, 655], [510, 655], [630, 655], [750, 655], [870, 655], [990, 655], [90, 595], [210, 595], [330, 595], [450, 595], [570, 595], [690, 595], [810, 595], [930, 595], [1050, 595], [30, 535], [150, 535], [270, 535], [390, 535], [510, 535], [630, 535], [750, 535], [870, 535], [990, 535], [90, 475], [210, 475], [330, 475], [450, 475], [570, 475], [690, 475], [810, 475], [930, 475], [1050, 475], [30, 415], [150, 415], [270, 415], [390, 415], [510, 415], [630, 415], [750, 415], [870, 415], [990, 415], [90, 355], [210, 355], [330, 355], [450, 355], [570, 355], [690, 355], [810, 355], [930, 355], [1050, 355], [30, 295], [150, 295], [270, 295], [390, 295], [510, 295], [630, 295], [750, 295], [870, 295], [990, 295]]

    def generateURL(self):
        return f'https://kilterlookup.com/find?name=&setter=&showCampusOnly=false&numResults={self.numResults}&selectedAngle={self.angle}&selectedSort=Popularity%20Desc&productSize=product_size_id_10'

    def requestRoutes(self):
        # url = 'https://kilterlookup.com/find?name=&setter=&showCampusOnly=false&numResults=1100&selectedAngle=-1&selectedSort=Popularity%20Desc&productSize=product_size_id_10'
        url = self.generateURL()
        response = requests.get(url)
        data = response.json()
        return data

    def writeCSV(self):
        routeList = []
        ratingList = []
        data = self.requestRoutes()
        for route in data['climbs']:
            holds = np.zeros(len(self.HOLD_ID), dtype=int)
            for hold in route['holds']:
                index = self.HOLD_ID.index(int(hold))
                holds[index] = int(route['holds'][hold])
            routeList.append(holds)
            ratingList.append(int(route['vgrade30'][1:]))

        df = pd.DataFrame(routeList, columns=self.HOLD_ID)
        df = pd.concat([df, pd.DataFrame(ratingList, columns=['rating'])], axis=1)

        df.to_csv(f'training_data{self.angle}.csv')

if __name__ == '__main__':
    x = webscraper()
    x.writeCSV()